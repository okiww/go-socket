// Code generated by MockGen. DO NOT EDIT.
// Source: modules/message/repositories/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "go-socket/modules/message/models"
	reflect "reflect"
)

// MockMessageInterface is a mock of MessageInterface interface
type MockMessageInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMessageInterfaceMockRecorder
}

// MockMessageInterfaceMockRecorder is the mock recorder for MockMessageInterface
type MockMessageInterfaceMockRecorder struct {
	mock *MockMessageInterface
}

// NewMockMessageInterface creates a new mock instance
func NewMockMessageInterface(ctrl *gomock.Controller) *MockMessageInterface {
	mock := &MockMessageInterface{ctrl: ctrl}
	mock.recorder = &MockMessageInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessageInterface) EXPECT() *MockMessageInterfaceMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockMessageInterface) GetAll() ([]models.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockMessageInterfaceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockMessageInterface)(nil).GetAll))
}

// Save mocks base method
func (m *MockMessageInterface) Save(message models.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockMessageInterfaceMockRecorder) Save(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMessageInterface)(nil).Save), message)
}